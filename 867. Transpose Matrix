---------------------- LEETCODE ----------------------

class Solution {
public:
    vector<vector<int>> transpose(vector<vector<int>>& matrix) {
        int row = matrix.size();
        int col = matrix[0].size();
        
        vector<vector<int>> output(col,vector<int>(row));

        for(int i =0 ; i<row ; i++) {
            for(int j=0 ; j<col ; j++) {
                output[j][i]=matrix[i][j];
            }
        }
        return output;
    }
};

-------------------------- CPP -------------------------------

#include <iostream>
#include <vector>
using namespace std;

  vector<vector<int>> transpose(vector<vector<int>>& matrix) {
        int row = matrix.size();
        int col = matrix[0].size();

        vector<vector<int>> output(col,vector<int>(row));

        for(int i =0 ; i<row ; i++) {
            for(int j=0 ; j<col ; j++) {
                output[j][i]=matrix[i][j];
            }
        }
        return output;
    }

int main()
{
     vector<vector<int>> matrix = {
        {1, 2, -3},
        {-4, 5, 6},
        {7, -8, 9}
    };


    vector<vector<int>> transposedMatrix = transpose(matrix);

     cout << "Transposed Matrix" << endl;
    for (auto& row : transposedMatrix) {
        for (int value : row) {
            cout << value << " ";
        }
        cout << endl;
    }

    return 0;
}
